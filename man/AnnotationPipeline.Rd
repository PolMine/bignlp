% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AnnotationPipeline.R
\name{AnnotationPipeline}
\alias{AnnotationPipeline}
\title{AnnotationPipeline Class.}
\description{
Worker behind the higher-level \code{StanfordCoreNLP} class that
allows fine-tuned configuration of an annotation pipeline, see the
\href{https://stanfordnlp.github.io/CoreNLP/pipelines.html}{documentation of CoreNLP Pipelines}. The
\verb{$annotate()} method supports processing annotations in parallel. Unlike
the \code{StanfordCoreNLP$process_files()} method for processing the content of
files in parallel, it offers an in-memory operation. As annotations consume
a lot of memory, there are limitations to allocating sufficient heap space
required for the parallel in-memory processing of larger corpora. If heap
space is insufficient, the process may run endless without a telling
warning message or an error. So use the \verb{$annotate()} method with
appropriate care.
}
\examples{
A <- AnnotationPipeline$new()
a <- c("This is a sentences.", "Yet another sentence.")
s <- A$annotate(a)
result <- s$as.data.table()

reuters_txt <- readLines(
  system.file(package = "bignlp", "extdata", "txt", "reuters.txt")
)
B <- AnnotationPipeline$new()
r <- B$annotate(reuters_txt)
result <- r$as.data.table()

\dontrun{
# this will NOT work with 512GB heap space - 4 GB required
library(polmineR)
gparl_by_date <- corpus("GERMAPARL") \%>\%
  subset(year \%in\% 1998) \%>\%
  split(s_attribute = "date") \%>\% 
  get_token_stream(p_attribute = "word", collapse = " ") \%>\%
  as.character()
C <- AnnotationPipeline$new()
anno <- C$annotate(gparl_by_date, 4L)
result <- anno$as.data.table(anno)
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{pipeline}}{AnnotationPipeline}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-AnnotationPipeline-new}{\code{AnnotationPipeline$new()}}
\item \href{#method-AnnotationPipeline-annotate}{\code{AnnotationPipeline$annotate()}}
\item \href{#method-AnnotationPipeline-clone}{\code{AnnotationPipeline$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AnnotationPipeline-new"></a>}}
\if{latex}{\out{\hypertarget{method-AnnotationPipeline-new}{}}}
\subsection{Method \code{new()}}{
Initialize AnnotationPipeline
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AnnotationPipeline$new(corenlp_dir = getOption("bignlp.corenlp_dir"))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{corenlp_dir}}{Directory where StanfordCoreNLP resides.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AnnotationPipeline-annotate"></a>}}
\if{latex}{\out{\hypertarget{method-AnnotationPipeline-annotate}{}}}
\subsection{Method \code{annotate()}}{
Annotate a list of strings.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AnnotationPipeline$annotate(x, purge = FALSE, threads = NULL, verbose = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{A list of \code{character} vectors to annotate, an \code{AnnotationList}
class object or an ArrayList with Annotation objects.}

\item{\code{purge}}{A \code{logical} value, whether to purge text first.}

\item{\code{threads}}{If \code{NULL}, all available threads are used, otherwise an
\code{integer} value with number of threads to use.}

\item{\code{verbose}}{A \code{logical} value, whether to show progress messages.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A Java object .
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AnnotationPipeline-clone"></a>}}
\if{latex}{\out{\hypertarget{method-AnnotationPipeline-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AnnotationPipeline$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
