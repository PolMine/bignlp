% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/output.R
\name{corenlp_parse_conll}
\alias{corenlp_parse_conll}
\title{Parse the CoNLL output of CoreNLP.}
\usage{
corenlp_parse_conll(x, progress = TRUE)
}
\arguments{
\item{x}{A filename, or a \code{character} vector of filenames. If \code{x} is a \code{list}
(of \code{character} vectors of filenames), it will be unlisted to yield a
\code{character} vector.}

\item{progress}{logical}
}
\value{
A \code{data.frame} with 8 columns:
\itemize{
\item \strong{doc_id}: Document id, an integer value.
\item \strong{idx}: Token Counter, starting at 1 for each new sentence.
\item \strong{word}: Word form or punctuation symbol.
\item \strong{lemma}: Lemma of word form, or an underscore if not available.
\item \strong{pos}: Fine-grained part-of-speech tag, or underscore if not available.
\item \strong{ner}: Named Entity tag, or underscore if not available.
\item \strong{headidx}: Head of the current token, which is either a value of ID or zero ('0'). This is underscore if not available.
\item \strong{deprel}: Dependency relation to the HEAD, or underscore if not available.
}

Note that Column 1 is generated by bignlp, columns 2-8 map the CoNLL output
of CoreNLP; the description of the columns is taken from the \href{https://nlp.stanford.edu/nlp/javadoc/javanlp/edu/stanford/nlp/pipeline/CoNLLOutputter.html}{documentation of the CoNLLOutputter class}
}
\description{
Read CoNLL output from a file and return a \code{data.table} with the annotation
data.
}
\details{
\code{corenlp_parse_conll} uses \code{data.table::fread()} and supplies
settings that prevent undesired behaviour. The resulting \code{data.table} will
have the columns "idx", "word", "lemma", "pos", "ner", "headidx", "deprel",
see the \href{https://nlp.stanford.edu/nlp/javadoc/javanlp/edu/stanford/nlp/pipeline/CoNLLOutputter.html}{documentation of the CoNLLOutputter class}.
}
