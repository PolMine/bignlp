% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/corenlp.R
\name{corenlp_annotate}
\alias{corenlp_annotate}
\title{Annotate a string.}
\usage{
corenlp_annotate(x, destfile = NULL,
  corenlp_dir = getOption("bignlp.corenlp_dir"),
  properties_file = getOption("bignlp.properties_file"), method = "json",
  threads = 1L, progress = TRUE, preclean = TRUE, verbose = TRUE)
}
\arguments{
\item{x}{A \code{data.table} (required to have the columns 'id' and 'text'),
or a character vector with input file(s). Files are assumed to be tsv files
with two columns, 'id' and 'text'.}

\item{destfile}{An output file, if threads > 1, a directory where ndjson files will be stored.}

\item{corenlp_dir}{The directory where corenlp resides.}

\item{properties_file}{A properties file to configure annotator.}

\item{method}{The output generated, either "json" (default), "txt", or "xml".}

\item{threads}{An integer.}

\item{progress}{Logical, whether to show progress bar.}

\item{preclean}{Logical, whether to preprocess string.}

\item{verbose}{Logical, whether to output messages.}
}
\value{
The target files will be returned, so that they can serve as input to
  \code{corenlp_parse_ndjson}.
}
\description{
Use CoreNLP to annotate strings.
}
\details{
If argument \code{threads} is 1, the tagging result is returned, if destfile is NULL.
If \code{threads} is higher than 1, \code{destfile} should be a directory where tagging
results will be stored as NDJSON files.
}
\examples{
library(data.table)
reuters_dt <- data.table(
  text = readLines(system.file(package = "bignlp", "extdata", "txt", "reuters.txt"))
)
reuters_dt[["id"]] <- 1L:nrow(reuters_dt)

destfile <- tempfile()
corenlp_dir <- system.file(package = "cleanNLP", "extdata", "stanford-corenlp-full-2016-10-31")
properties_english_fast <- system.file(
  package = "cleanNLP", "extdata", "StanfordCoreNLP-english-fast.properties"
)
options(java.parameters = "-Xmx4g")
y <- corenlp_annotate(
  x = reuters_dt,
  destfile = NULL,
  properties_file = properties_english_fast,
  corenlp_dir = corenlp_dir,
  threads = 1L,
  progress = FALSE
  )
}
